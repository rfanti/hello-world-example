name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Run Unit Tests
        run: mvn test
        
      - name: Generate Test Report
        run: mvn surefire-report:report

      - name: Archive Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

      # list surefire report files
      # - name: List Surefire Report files
      #   run: ls -alh target/surefire-reports/
      
      # Extract test results and display passed/total
      - name: Get test results
        run: |
          # Extract the number of tests from the surefire report
          passed_tests=$(grep -oP '(?<=Tests run: )\d+(?=, Failures: 0, Errors: 0, Skipped: 0)' target/surefire-reports/*.txt | awk '{sum+=$1} END {print sum}')
          total_tests=$(grep -oP '(?<=Tests run: )\d+' target/surefire-reports/*.txt | awk '{sum+=$1} END {print sum}')
          if [ -z "$passed_tests" ]; then
            passed_tests=0
          fi
          if [ -z "$total_tests" ]; then
            total_tests=0
          fi
          echo "Passed $passed_tests / $total_tests tests"

      # - name: Analyze Code with SonarCloud
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Usa o token do GitHub Secrets
      #     run: mvn sonar:sonar -Dsonar.projectKey=rfanti_hello-world-example -Dsonar.organization=rfanti -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # Etapas específicas para a branch 'develop'
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploying to Staging Environment..."
          # Adicione o comando para o deploy no ambiente de staging

      # Etapas específicas para a branch 'main'
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to Production Environment..."
          # Adicione o comando para o deploy no ambiente de produção
